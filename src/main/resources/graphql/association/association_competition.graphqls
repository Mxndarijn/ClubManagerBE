type AssociationCompetitionMutations {
    createCompetition(dto: CompetitionDTO!, associationID: ID!): CompetitionResponseDTO
    addUser(dto: CompetitionUserDTO!, associationID: ID!): CompetitionResponseDTO
    addUserScore(dto: CompetitionScoreDTO!, associationID: ID!): CompetitionResponseDTO
    addUserScores(dto: CompetitionScoresDTO!, associationID: ID!): CompetitionResponseDTO
    deleteCompetition(competitionId: ID!, associationID: ID!): DefaultBooleanResponseDTO
    stopCompetition(competitionId: ID!, associationID: ID!): CompetitionResponseDTO
    removeUser(dto: CompetitionUserDTO!, associationID: ID!): CompetitionResponseDTO
    removeUserScore(dto: CompetitionRemoveScoreDTO!, associationID: ID!): CompetitionResponseDTO
    removeUserScores(dto: CompetitionRemoveScoreDTO!, associationID: ID!): CompetitionResponseDTO
}

type AssociationCompetitionQueries {
    getCompetitionInformation(associationID: ID!, competitionID: ID!) : CompetitionResponseDTO
}

type AssociationCompetition {
    id: ID!
    name: String!
    description: String!
    association: Association!
    startDate: LocalDateTime!
    endDate: LocalDateTime!
    scoreType: CompetitionScoreType!
    ranking: CompetitionRanking!
    competitionUsers: [CompetitionUser]!
    active: Boolean!
}

input CompetitionScoresDTO {
    userID: ID!
    competitionID: ID!
    scores: [SmallCompetitionScoreDTO]!
}

input SmallCompetitionScoreDTO {
    score: Long
    scoreDate: LocalDate
}

input CompetitionRemoveScoreDTO {
    userID: ID!
    competitionID: ID!
    scoreId: ID!
}

input CompetitionRemoveScoresDTO {
    userID: ID!
    competitionID: ID!
    scores: [ID]!
}

enum CompetitionScoreType {
    TIME,
    POINT
}

enum CompetitionRanking {
    BEST,
    AVERAGE,
    AVERAGE_TOP_3
}

type CompetitionUser {
    id: CompetitionUserId!
    user: User!
    competition: AssociationCompetition!
    competitionRank: Int!
    calculatedScore: String!
    scores: [CompetitionScore]
}

type CompetitionUserId {
    userId: ID!
    competitionId: ID!
}

type CompetitionScore {
    id: ID!
    competitionUser: CompetitionUser!
    scoreDate: LocalDate!
    score: Long!
    competitionRank: Int
}

input CompetitionDTO {
    name: String!
    description: String!
    competitionRanking: CompetitionRanking!
    competitionScoreType: CompetitionScoreType!
    startDate: LocalDateTime!
    endDate: LocalDateTime!
}

type CompetitionResponseDTO {
    success: Boolean!
    message: String
    competition: AssociationCompetition
}

input CompetitionUserDTO {
    userID: ID!
    competitionID: ID!
}

input CompetitionScoreDTO {
    userID: ID!
    competitionID: ID!
    score: Long!
    scoreDate: LocalDate!
}