extend type Query {
    getMyProfile: User

#    Association Details
    getAssociationDetails(associationID: ID!): Association
    getAssociationStatistics(associationID: ID!): AssociationStatisticsDTO

    getAssociationRoles: [AssociationRole]!
    getAllWeapons(associationID: ID!): [Weapon]!
    getAllWeaponTypes(associationID: ID!): [WeaponType]!
}

type Mutation {
    createAssociation: Association

#    Invites
    sendAssociationInvite(dto: CreateAssociationInviteInput!): SendAssociationInviteResponseDTO
    removeAssociationInvite(inviteId: AssociationInviteInput!): DefaultBooleanResponseDTO
    changeUserAssociation(changeUserAssociationDTO: ChangeUserAssociationDTO!): ChangeUserAssociationResponse
    removeUserAssociation(deleteUserAssociationDTO: DeleteUserAssociationDTO!): DefaultBooleanResponseDTO
    acceptAssociationInvite(inviteId: AssociationInviteInput!): DefaultBooleanResponseDTO
    rejectAssociationInvite(inviteId: AssociationInviteInput!): DefaultBooleanResponseDTO

#    User Profile
    updateMyProfile(dto: UpdateMyProfileDTO!) : DefaultBooleanResponseDTO
    updateMyProfilePicture(dto: ChangeProfilePictureDTO!) : DefaultBooleanResponseDTO

#    Association settings
    updateAssociationPicture(dto: ChangeProfilePictureDTO!, associationID: ID!): DefaultBooleanResponseDTO
    updateAssociationSettings(dto: UpdateAssociationDTO!, associationID: ID!): DefaultBooleanResponseDTO

#    Create Weapon
    createWeapon(dto: CreateWeaponDTO!, associationID: ID!): CreateWeaponResponseDTO
}

input ChangeUserAssociationDTO {
    userUUID: ID!
    associationUUID: ID!
    associationRoleUUID: ID!
}

input DeleteUserAssociationDTO {
    userUUID: ID!
    associationUUID: ID!
}

input CreateAssociationInviteInput {
    userEmail: String!
    associationUUID: ID!
    associationRoleUUID: ID!
}

input CreateWeaponDTO {
    weaponName: String!
    weaponType: ID!
    weaponStatus: String!
}

input AssociationInviteInput {
    userUUID: ID!
    associationUUID: ID!
}

type ChangeUserAssociationResponse {
    success: Boolean!
    userAssociation: UserAssociation
}

type DefaultBooleanResponseDTO {
    success: Boolean!
    message: String
}

type CreateWeaponResponseDTO {
    success: Boolean!
    message: String
    Weapon: Weapon
}

type SendAssociationInviteResponseDTO {
    success: Boolean!
    message: String
    associationInvite: AssociationInvite
}

input UpdateAssociationDTO {
    associationName: String!
    welcomeMessage: String!
    contactEmail: String!
}


