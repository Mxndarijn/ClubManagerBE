extend type Query {
    getMyProfile: User
    getAssociationDetails(associationID: ID!): Association
    getAssociationRoles: [AssociationRole]!
}

type Mutation {
    createAssociation: Association
    sendAssociationInvite(dto: CreateAssociationInviteInput!): SendAssociationInviteResponseDTO
    removeAssociationInvite(inviteID: ID!): DefaultBooleanResponseDTO
    changeUserAssociation(changeUserAssociationDTO: ChangeUserAssociationDTO!): ChangeUserAssociationResponse
    removeUserAssociation(deleteUserAssociationDTO: DeleteUserAssociationDTO!): DefaultBooleanResponseDTO
}

input ChangeUserAssociationDTO {
    userUUID: ID!
    associationUUID: ID!
    associationRoleUUID: ID!
}

input DeleteUserAssociationDTO {
    userUUID: ID!
    associationUUID: ID!
}

input CreateAssociationInviteInput {
    userUUID: ID!
    associationUUID: ID!
    associationRoleUUID: ID!
}

type ChangeUserAssociationResponse {
    success: Boolean!
    userAssociation: UserAssociation
}

type DefaultBooleanResponseDTO {
    success: Boolean!
    message: String
}

type SendAssociationInviteResponseDTO {
    success: Boolean!
    message: String!
    associationInvite: AssociationInvite
}

