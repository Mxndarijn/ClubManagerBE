type UserQueries {
    getMyProfile: User
}

type UserMutations {
    updateMyProfile(dto: UpdateMyProfileDTO!) : DefaultBooleanResponseDTO
    updateMyProfilePicture(dto: ChangeProfilePictureDTO!) : DefaultBooleanResponseDTO
    updateLanguage(language: String) : DefaultBooleanResponseDTO
}


type User {
    id: ID!
    email: String!
    fullName: String
    language: String
    image: Image
    associations: [UserAssociation]
    presences: [UserPresence]
    reservations: [ReservationUser]
    role: AccountRole
    invites: [AssociationInvite]
}

type UserAssociation {
    id: UserAssociationId!
    user: User!
    association: Association!
    memberSince: String!
    associationRole: AssociationRole!
}

type UserAssociationId {
    userId: ID!
    associationId: ID!
}

type UserPresence {
    id: ID!
    user: User
    association: Association
    date: String
}

type PrivateUser {
    id: ID
    email: String!
}


input ChangeProfilePictureDTO {
    image: String!
}

input UpdateMyProfileDTO {
    fullName: String!
    email: String!
    oldPassword: String!
    newPassword: String
}
